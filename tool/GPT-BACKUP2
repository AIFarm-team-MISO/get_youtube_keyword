05-11
>>>>> 코드 만들기 전
-질문
그럼 이전의 '구독자 10만이하채널의 영상들' 의 조회수 대비 구독자 수의 비율을 확인하여 데이터 샘플을 얻은 후 이후 필터링인 '조회수 1만이상의 영상들' 에 적용하면 어떨까?

-- 답변
네, 그 방법이 좋아 보입니다. 유튜브에서 채널 구독자가 10만 이하인 채널의 비디오를 샘플로 삼아서 조회수 대비 구독자 수의 비율을 계산하고, 그 분포를 이해하면, 이후에는 더 큰 범위의 데이터 셋에도 같은 방법을 적용할 수 있습니다.
조회수가 1만 이상인 영상에 이 비율을 적용하면 '보석 영상'을 찾는데 더욱 효과적일 것입니다. 이 방법은 상대적으로 인기가 많지 않은 채널에서도 많은 조회수를 얻은 비디오, 즉 "보석"을 찾아내는 데 유용하게 사용될 수 있습니다.
그러나 이 방법은 여전히 데이터 수집에 시간이 많이 소요되며 Google의 API 사용 제한을 고려해야 하는 점을 기억해야 합니다. 그럼에도 불구하고 이는 보석 비디오를 찾는 좋은 첫걸음이 될 것입니다.

>>>>> 코드 만든 후

- 질문
만얀 한영상의 view_subscriber_ratios 값이 57.17816091954023 이라는 뜻은 구독자수 대비 조회수가 어떻게 계산된 값이고 해당값의 뜻을 알려줘

-- 답변
view_subscriber_ratios 값이 57.17816091954023이라는 것은 한 영상의 조회수가 해당 영상 채널의 구독자 수의 약 57.18배임을 의미합니다.
view_subscriber_ratios는 조회수를 구독자 수로 나눈 값을 퍼센트로 표현한 것입니다. 예를 들어, 영상이 10,000회 조회되었고, 해당 채널의 구독자 수가 1,000명일 경우, 조회수 대비 구독자 수의 비율은 10,000 / 1,000 = 10이 됩니다. 이를 백분율로 변환하면 10 * 100 = 1000%가 됩니다.
따라서 view_subscriber_ratios 값이 57.17816091954023이라는 것은 해당 영상이 채널의 구독자 수 대비 약 57.18배의 조회수를 기록했다는 것을 의미합니다. 이는 해당 영상이 해당 채널의 구독자 수에 비해 매우 높은 관심을 받았다는 것을 의미합니다. 이러한 정보는 해당 영상이 특정 키워드에 대해 높은 관심을 가진 사람들에게 노출되었거나, 특히 인기 있는 콘텐츠를 제공했음을 나타낼 수 있습니다.

- 질문
그럼 threshold = 10로 정했다는 것은 해당영상이 조회수대비 구독자 비율이 10이상, 즉, 자신이 보유한 구독자의 10퍼센트 이상의 조회수를 기록한 영상을 필터링한다는 뜻이라는거지?

-- 답변
아니요, 여기서 threshold = 10은 해당 영상의 조회수가 자신이 보유한 구독자 수의 10배 이상일 경우를 필터링한다는 의미입니다.
즉, 만약 한 영상의 조회수가 해당 채널의 구독자 수의 10배 이상이면, 이 영상은 threshold 값인 10보다 큰 view_subscriber_ratio 값을 가지게 됩니다. 따라서 이런 영상들만 선택하여 필터링하는 것입니다.
예를 들어, 한 영상의 조회수가 10,000회이고, 해당 채널의 구독자 수가 1,000명이라면, 이 영상의 view_subscriber_ratio 값은 10,000 / 1,000 = 10이 됩니다. 이 경우, 이 영상은 threshold 값인 10과 같으므로 필터링에 포함됩니다.
반면, 조회수가 9,000회이고, 구독자 수가 1,000명인 영상의 view_subscriber_ratio 값은 9,000 / 1,000 = 9로, threshold 값인 10보다 작으므로 이 영상은 필터링에서 제외됩니다.

- 질문
그럼 이전에 말한 57.17816091954023 이라는 수가 나온영상은 구독자 대비 조회수가 57배 나온 영상이란 뜻이야?
-- 답변
네, 맞습니다. view_subscriber_ratio 값이 57.17816091954023인 경우, 해당 영상의 조회수가 해당 채널의 구독자 수의 약 57배임을 의미합니다. 즉, 이는 해당 채널의 구독자들 외에도 많은 사람들이 이 영상을 시청했음을 나타냅니다.
이런 경우, 해당 영상이 구독자 수를 초과하는 높은 조회수를 기록했다는 점에서 해당 영상이 매우 인기있는 콘텐츠임을 추정할 수 있습니다. 이런 영상은 구독자 외의 다른 사람들로부터도 큰 관심을 받았다는 의미이며, 비디오의 품질, 콘텐츠, 마케팅 전략 등이 효과적이었음을 나타낼 수 있습니다.

- 질문
threshold = 10이라는 숫자는 적정한 숫자라고 생각해?

- 답변
threshold 값을 설정하는 것은 어떤 영상을 "성공적"이라고 간주할 것인지에 대한 기준을 설정하는 것입니다.
threshold 값을 10으로 설정하는 경우, 이는 구독자 수 대비 조회수가 구독자 수의 10배 이상인 영상만을 선별하겠다는 의미입니다. 이 값은 적절하게 설정되어야 합니다. 너무 높게 설정하면, 매우 높은 조회수를 기록한 영상만을 선별하게 될 것입니다. 반대로 너무 낮게 설정하면, 조회수가 그리 높지 않은 영상도 선별하게 됩니다.
따라서, threshold 값을 설정할 때는 전체 데이터의 분포를 고려해야 합니다. 위에서 제공된 데이터를 보면, 대부분의 view_subscriber_ratios 값이 10 아래에 있지만, 일부는 10 이상이고 그 중 일부는 훨씬 높은 값을 가지고 있습니다.
이 경우, threshold 값을 10으로 설정하는 것은 "성공적"이라고 간주할 영상을 상위 수준의 영상으로 제한하겠다는 의미입니다. 이는 당신이 원하는 결과에 따라 적절할 수도, 그렇지 않을 수도 있습니다.
만약 당신이 "성공적인" 영상을 좀 더 넓게 정의하고 싶다면 threshold 값을 낮추는 것을 고려해볼 수 있습니다. 반대로, 당신이 "성공적인" 영상을 매우 높은 조회수를 기록한 영상으로 좁게 정의하고 싶다면 threshold 값을 높이는 것을 고려해볼 수 있습니다.
결국, threshold 값을 어떻게 설정할지는 당신의 목표와 분석하고자 하는 데이터의 특성에 따라 달라질 것입니다. 이를 잘 고려하여 threshold 값을 설정해야 합니다.


<< 05-15 >>
-질문
앞으로 필터링할 내용은 필터링된 영상의 채널이 콘텐츠 갯수가 많은지 적은지를 판별하려고 해. 과연 몇개 이하의 영상이면 의미가 있을까? 너의 생각은 어때?

- 답변
콘텐츠의 개수를 판별하는 것은 "보석"을 찾는 데에 중요한 요소 중 하나일 수 있습니다. 콘텐츠의 개수는 해당 채널이 얼마나 활발하게 콘텐츠를 생산하고 있는지, 그리고 그 콘텐츠가 얼마나 다양한지에 대한 정보를 제공합니다.
콘텐츠 갯수를 의미 있는 기준으로 설정하는 것은 조금 복잡할 수 있습니다. 이는 채널의 특성, 주제, 콘텐츠의 품질, 콘텐츠 제작에 필요한 시간 등 다양한 요소에 따라 달라질 수 있기 때문입니다. 예를 들어, 애니메이션 채널이나 다큐멘터리 채널 같은 경우에는 하나의 콘텐츠를 만드는 데 많은 시간과 노력이 필요하므로 콘텐츠의 갯수가 상대적으로 적을 수 있습니다. 반면에, 블로그 또는 뉴스 업데이트와 같은 채널은 매일 여러 개의 콘텐츠를 업로드할 수 있습니다.
그러나 일반적인 가이드라인을 제공한다면, 아마도 50개 미만의 콘텐츠를 가진 채널은 아직 초기 단계의 채널로 볼 수 있을 것입니다. 이러한 채널은 아직 많은 콘텐츠를 제공하지 않았거나, 채널 운영을 시작한 지 얼마 되지 않았을 수 있습니다. 또한, 이러한 채널은 아직 구독자를 많이 모으지 못했을 가능성이 높습니다.
그러나 이는 단지 일반적인 가이드라인일 뿐, 개별 채널의 특성에 따라 크게 달라질 수 있습니다. 따라서 콘텐츠의 개수뿐만 아니라 그 콘텐츠의 품질, 콘텐츠 생성 빈도, 조회수 등 다른 요소들도 함께 고려하는 것이 중요합니다.

- 질문
알았어. 일단 그건 그렇고 지금의 내 프로그램에서 쇼츠영상과 라이브영상이 필터링 되는것은 아니지?

- 답변
당신이 작성한 코드를 직접 볼 수는 없지만, 일반적으로 YouTube API를 사용하여 비디오를 검색하고 필터링하는 경우, 기본적으로 모든 종류의 영상(표준 영상, 라이브 스트리밍, 쇼츠 등)이 검색 결과에 포함됩니다.
라이브 스트리밍이나 쇼츠와 같은 특정 종류의 비디오를 필터링하려면 추가적인 조건을 설정해야 합니다. 예를 들어, 라이브 스트리밍은 일반적으로 라이브 방송 중이거나 예약된 경우 'liveBroadcastContent' 필드가 'live' 또는 'upcoming'으로 설정됩니다. 따라서 이 필드를 확인하여 라이브 스트리밍을 필터링할 수 있습니다.
쇼츠는 조금 더 복잡할 수 있는데, YouTube API는 현재 쇼츠를 명시적으로 구분하는 방법을 제공하지 않습니다(2021년 9월 기준). 그러나 쇼츠는 일반적으로 60초 미만의 비디오이므로, 비디오의 길이를 확인하여 쇼츠를 어느 정도 필터링할 수 있습니다. 이렇게 하려면 비디오의 'duration' 필드를 확인해야 합니다.
이러한 방법들을 사용하여 라이브 스트리밍과 쇼츠를 필터링할 수 있습니다. 그러나 이는 완벽한 방법이 아닐 수 있으므로, 각각의 비디오를 실제로 확인하여 필터링이 제대로 이루어졌는지 확인하는 것이 중요합니다

- 질문
라이브영상을 배제하려면?

- 답변
YouTube Data API는 현재 직접적으로 'eventType'이 'live'가 아닌 영상만 가져오는 기능을 제공하지 않습니다. 따라서, 이를 해결하기 위한 간접적인 방법은 두 단계로 진행해야 합니다.
먼저, 모든 관련 영상을 검색합니다. 그런 다음, 각 영상의 'liveBroadcastContent' 필드를 확인하여 'live' 또는 'upcoming'이 아닌 영상만 선택합니다.
liveBroadcastContent 필드는 비디오가 라이브 방송인지, 예약된 라이브 방송인지, 아니면 일반 비디오인지를 나타내는 값입니다.
이 필드의 값이 'live' 또는 'upcoming'이 아닌 비디오만 선택하도록 필터링하면 라이브 방송을 배제할 수 있습니다.

- 질문
응 맞는 말이야. 하지만 썸네일 제작에 시간이 들어가는 문제와 별도로 과연 보석영상의 조회수가 높은 이유가 그영상의 썸네일 때문이었을까? 라는거야. 그래서 예를들면 10만이하의 영상들을 필터링 했을때 그영상들의 썸네일들을 비교해보면 해당키워드의 영상을 보는 구독자이 좋아할만한 썸네일을 알수 있게 되지 않을까?

- 답변
그렇습니다. 썸네일은 비디오를 선택하는데 큰 역할을 합니다. 보석 비디오의 조회수가 높은 이유 중 하나가 효과적인 썸네일 디자인일 수 있습니다. 사용자는 종종 썸네일을 보고 비디오의 내용을 빠르게 판단하고, 그에 따라 비디오를 클릭하거나 무시합니다.
당신이 제안한 방법으로, 낮은 조회수의 비디오들의 썸네일을 분석하면, 어떤 썸네일 디자인이 더 많은 클릭을 유도하는지에 대한 통찰력을 얻을 수 있을 것입니다. 이를 통해 보석에 관한 영상을 보는 구독자들이 좋아할 만한 썸네일 트렌드를 파악할 수 있을 것입니다.
이 분석은 수작업으로도 가능하지만, 큰 규모의 데이터를 다루는 경우에는 컴퓨터 비전 기술을 활용하여 자동화할 수도 있습니다. 예를 들어, 머신 러닝 알고리즘을 사용하여 썸네일 이미지의 공통 요소와 특징을 식별하고, 이를 바탕으로 효과적인 썸네일 디자인 가이드라인을 만들 수 있습니다.
하지만 이러한 분석은 복잡하고 시간이 많이 소요될 수 있으며, 이를 위해 필요한 전문적인 지식과 리소스를 갖추고 있어야 합니다. 따라서 여러분의 목표와 가능성을 고려하여 가장 적합한 방법을 선택해야 합니다.

<< 0516 >>
- 질문
해당채널의 평균좋아요와 평균조회수를 구한 비율을 확인하는거야.
그래서 해당영상의 좋아요수가 이비율보다 낮다면 해당영상은 광고를 집행했을 가능성이 높아.
왜냐하면 광고로 유입된 시청자들은 좋아요를 클릭할 확율이 낮기 때문이야. 이가설을 어떻게 생각해?

- 답변
네, 그런 가설을 검증하는 것은 매우 합리적인 접근입니다. 실제로 광고를 통해 유입된 시청자들은 콘텐츠에 대한 참여도가 낮을 수 있으므로, 좋아요 수가 예상보다 적을 수 있습니다. 그래서 해당 채널의 평균 좋아요 수 대비 조회수 비율을 계산하고, 이 비율보다 현저히 낮은 좋아요/조회수 비율을 가진 동영상을 광고 동영상으로 간주하는 것은 가능한 전략일 것입니다.
그러나 이 방법에는 몇 가지 주의할 점이 있습니다. 첫째, 좋아요 수는 동영상의 품질이나 인기만을 반영하는 것이 아닙니다. 예를 들어, 좋아요 수는 동영상의 길이, 업로드된 시간, 동영상의 주제 등 여러 다른 요인에 의해 영향을 받을 수 있습니다. 둘째, 좋아요 수와 조회수 사이의 관계는 항상 일정하지 않습니다. 예를 들어, 동영상이 처음 업로드되었을 때와 시간이 지난 후의 좋아요/조회수 비율은 크게 다를 수 있습니다.
따라서 이런 방법을 사용할 때는 위와 같은 여러 가지 요인을 고려해야 합니다. 또한, 이 방법은 광고 동영상을 완벽하게 필터링하지 못할 수 있으므로, 이 점도 유의해야 합니다.

- 질문
맞아. 그러나 광고영상을 필터링하는데는 의미가 있을것 같아. 그리고 평균좋아요 대비 평균조회수가 높은 영상도 배제하고 싶어. 그영상들은 해당 크리에이터의 팬덤일 가능성도 있기 때문이야. 위의 가설과 지금의 내용을 포함한다면 어떤식으로 광고영상을 필터링하는 코드를 만드는게 좋을까?

- 답변
먼저, YouTube 데이터 API를 사용하여 각 비디오의 'likes' 수를 가져올 수 있습니다. 그런 다음, 이 정보를 사용하여 채널의 평균 'likes' 수와 'views' 수를 계산할 수 있습니다.
이를 바탕으로, 각 비디오의 'likes' 대 'views' 비율을 계산하고, 이 비율이 채널의 평균 비율보다 현저히 낮은 비디오를 광고 비디오로 간주할 수 있습니다. 또한, 이 비율이 채널의 평균 비율보다 현저히 높은 비디오를 팬덤이 강한 비디오로 간주하고 배제할 수 있습니다.
이를 구현하기 위해, 다음과 같은 함수를 추가하고 수정할 수 있습니다:

- 질문
알았어. 그러면 이코드를 어떤 부분에서 필터링하는것이 좋을까? 키워드로 조회된 영상들중에서 필터링을 처음으로 하는것이 좋을까? 아니면 구독자 10만이하의 채널을 필터링한후에 좋아요필터링을 하는것이 좋을까?

- 답변
필터링 순서는 당신의 목적에 따라 달라질 수 있습니다.
키워드로 조회된 영상 중에서 먼저 필터링: 이 경우, 당신은 키워드에 대한 가장 넓은 범위의 결과를 얻을 수 있습니다. 이 방법은 특정 키워드에 대한 전체적인 트렌드를 파악하는 데 더 유용할 수 있습니다.
구독자 10만 이하의 채널을 먼저 필터링한 후 좋아요 필터링: 이 경우, 당신은 특정 크기의 채널에 초점을 맞추게 됩니다. 이 방법은 특정 크기의 채널에서 발생하는 트렌드를 더 자세히 파악하는 데 도움이 될 수 있습니다.
따라서, 어떤 순서로 필터링을 할지는 당신의 목적에 따라 결정하면 됩니다. 또한, 가능하다면 두 가지 방법 모두를 시도하고 그 결과를 비교해보는 것도 유익할 수 있습니다. 이를 통해 당신의 가설이 어떤 케이스에서 더 잘 작동하는지를 파악할 수 있습니다.

- 질문
그럼, 키워드로 조회된 영상 중에서 먼저 필터링을 선택하다면, 코드의 어떤부분의 코드를 수정해서 함수를 사용해야 할까?

- 답변
calculate_like_view_ratio 함수를 사용하여 좋아요 대 조회수의 비율을 계산한 후, filter_videos_by_like_view_ratio 함수를 사용하여 좋아요 대 조회수의 비율이 주어진 범위 내에 있는 비디오만을 선택하려면, 아마도 기존 코드의 main 함수 또는 그와 유사한 부분에서 이 두 함수를 호출하면 될 것입니다.

<< 0519 >>
-질문
흠. 그러면 '조회수대비좋아요비율' 을 만들기 위해서 채널의 정보를 가져오는 부분에서 '검색된 영상'의채널에 있는 영상들의 평균조회수와 평균좋아요를 가져온다음, 그비율을 계산해서 각영상의 '조회수대비좋아요비율' 의 기준을 만드는 것은 어때? 예를들면, 한채널의 평균조회수가 50000이고 평균좋아요가 1000개 이면 이 비율을 '1'이라고 정하는 거야. 이후 '검색된 영상' 의 조회수 대비 좋아요의 수가 비율('1') 보다 높은지 낮은지를 판단하는거지. 이가설은 어때?

-답변
제안하신 방법은 좋은 아이디어입니다. 이렇게 하면 각 채널의 고유한 특성을 고려할 수 있으므로 결과가 더욱 정확해질 가능성이 있습니다. 각 채널마다 조회수와 좋아요 수의 비율이 다를 수 있으므로, 이러한 차이를 고려하는 것은 의미 있는 접근법일 것입니다.
예를 들어, 어떤 채널은 자신의 콘텐츠에 대해 시청자들이 매우 활발하게 반응하는 반면, 다른 채널은 시청자들이 좋아요를 누르는 데 상대적으로 소극적일 수 있습니다. 이와 같은 차이를 고려하지 않으면, 좋아요를 덜 받는 채널의 비디오가 광고로 잘못 분류될 수 있습니다.
따라서 제안하신 대로 각 채널의 평균 조회수와 평균 좋아요 수를 계산하여 기준 비율을 설정하면, 이러한 문제를 어느 정도 해결할 수 있을 것입니다. 그런 다음 이 기준에 따라 각 비디오를 평가하면 됩니다.

- 질문
API 호출은 이미 get_channels_info에서 모든영상에 호출하고 있기 때문에 이전보다 호출이 많아진다고 보기는 어렵지 않아?

- 답변
그렇다면 이를 구현하기 위해 get_channels_info 함수를 수정하여, 채널 별 평균 조회수와 평균 좋아요 수를 반환하도록 하면 좋을 것 같습니다. 이 정보를 바탕으로 채널 별 좋아요/조회수 비율을 계산하고, 이를 각 영상의 좋아요/조회수 비율과 비교하여 필터링을 수행하면 됩니다.

-질문
그러면 전체코드에서 볼때 youtube.search().list API를 2번 호출하게 되는거구나. youtube_search_list함수에서 처음 키워드를 통해 영상들을 추출할때 한번, 그리고 추출된 영상의 채널의정보를 가지고 한번더 youtube.search().listAPI를 호출하게 되는거야. 맞지? youtube.search().listAPI를 한번호출하여 내가 원하는 모든 정보들을 얻기는 어려운거야?

- 답변
네, 그렇습니다. 현재로서는 youtube.search().list API를 두 번 호출하게 됩니다. 한 번은 특정 키워드를 사용해 영상을 검색하고, 두 번째는 특정 채널의 모든 영상을 검색하는 데 사용됩니다.
API의 작동 방식과 제한 사항 때문에 한 번의 호출로 모든 필요한 정보를 얻는 것이 어렵습니다. 예를 들어, youtube.search().list API는 특정 키워드나 채널 ID를 기반으로 영상을 검색할 수 있지만, 각각의 검색은 별도의 API 호출로 취급됩니다.
또한, youtube.search().list API는 영상의 조회수와 좋아요 수와 같은 통계 정보를 제공하지 않습니다. 이러한 정보를 얻으려면 추가적으로 youtube.videos().list API를 호출해야 합니다. 따라서 현재 구현에서는 이 두 API를 적절히 조합하여 필요한 정보를 수집하고 있습니다.
구현을 최적화하거나 API 호출을 줄이려면, 요구 사항과 API의 제한 사항을 고려하여 전략을 세워야 합니다. 예를 들어, 특정 채널의 모든 영상을 검색하는 대신, 특정 수의 최근 영상만 검색하는 방식을 고려할 수 있습니다. 이렇게 하면 API 호출을 줄일 수 있지만, 채널의 평균 조회수와 좋아요 수를 계산하는 데 사용되는 데이터가 제한되므로, 이 점을 고려해야 합니다.
